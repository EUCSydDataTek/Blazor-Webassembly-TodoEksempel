@page "/"
@inject ITodoService _TodoService
@inject NavigationManager _Navigation

<PageTitle>Todo</PageTitle>

<h2>Todo</h2>

<div class="btn-group m-2" role="group" aria-label="Basic example">
    <ReloadButton OnClick="ReloadButton" Isbusy="Isbusy" />
    <button class="btn btn-success" @onclick='CreateButton'><i class="fa-solid fa-circle-plus"></i> New item</button>
</div>

<ul class="list-group">
    @foreach(var item in todoItems)
    {
        <ProductItemListComponent item="item"/>
    }
</ul>

<LoadingElement Isbusy="Isbusy" />

@code{

    [CascadingParameter] public IModalService Modal { get; set; } = default!;

    public List<TodoItem> todoItems = new List<TodoItem>();

    public bool Isbusy = false;

    protected override async Task OnInitializedAsync()
    {
        Isbusy = true;

        todoItems = await _TodoService.GetTodoItemsAsync();

        Isbusy = false;

        await base.OnInitializedAsync();
    }

    public async void ReloadButton()
    {
        todoItems.Clear();
        Isbusy = true;

        todoItems = await _TodoService.GetTodoItemsAsync();

        Isbusy = false;

        StateHasChanged();
    }

    public async void CreateButton()
    {
        var modal = Modal.Show<Todo_BlazorWebassembly_Eksempel.Pages.TodoItems.Create>();

        await modal.Result;

        Isbusy = true;

        todoItems = await _TodoService.GetTodoItemsAsync();

        Isbusy = false;
        StateHasChanged();
    }
}