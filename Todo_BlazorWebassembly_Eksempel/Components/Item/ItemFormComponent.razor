@namespace Todo_BlazorWebassembly_Eksempel.Components
@inject ITodoService _TodoService

<EditForm Model="todoItem" OnValidSubmit="@OnValidSubmitAsync" >

    <div class="form-group">
        <label for="exampleInputEmail1">Title</label>
        <input @bind="todoItem.Title" type="text" class="form-control" id="exampleInputEmail1" placeholder="title" required>
    </div>

    <div class="form-group">
        <label for="title">Description</label>
        <textarea class="form-check w-100" id="title" @bind="todoItem.Description" placeholder="description" required />
    </div>

    @if (ItemId == 0)
    {
        <button type="submit" class="btn btn-primary">Create</button>
    }
    else
    {
        <div class="form-check">
            <input @bind="todoItem.IsCompleted" type="checkbox" class="form-check-input" id="CompletedCheck">
            <label class="form-check-label" for="exampleCheck1">completed</label>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
    }

</EditForm>

@code {

    private TodoItem todoItem { get; set; } = new TodoItem();

    [Parameter] public int ItemId { get; set; } = 0;

    [Parameter] public EventCallback<TodoItem> ValidSubmit { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (ItemId != 0)
        {
            todoItem = await _TodoService.GetTodoItemAsync(ItemId);
        }

        await base.OnInitializedAsync();
    }

    public async Task OnValidSubmitAsync()
    {


        await ValidSubmit.InvokeAsync(todoItem);
    }
}
